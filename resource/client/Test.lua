-- local Coords = vec3(-560.3450, -997.8854, 22.7172)
-- local point = lib.points.new({
--     coords = Coords,
--     distance = 10,
-- })

-- function point:onEnter()
--     local id = exports['LGF_Interaction']:createInteraction({
--         Coords = vec3(self.coords.x, self.coords.y, self.coords.z + 0.5),
--         DataBind = {
--             {
--                 index = 1,
--                 title = "Spawn Kuruma",
--                 icon = "car",
--                 description = "Spawn a vehicle: Kuruma Blindata.",
--                 onClick = function(index)
--                     local LGF = exports['LGF_Utility']:UtilityData()
--                     local newVehicle = LGF:CreateEntityVehicle({
--                         model = "kuruma",
--                         position = LGF.Player:Coords(),
--                         isNetworked = true,
--                         seatPed = true,
--                         seat = -1,
--                         freeze = false,
--                         onCreated = function(vehicle)
--                             print("Vehicle created with ID:", vehicle)
--                         end
--                     })
--                 end
--             },
--             {
--                 index = 2,
--                 title = "Give Health",
--                 icon = "health",
--                 description = "Restore your health to full.",
--                 onClick = function(index)
--                     local MyPed = PlayerPedId()
--                     SetEntityHealth(MyPed, 100.0) -- Restore health to maximum
--                     print("Your health has been restored!")
--                 end
--             },
--             {
--                 index = 3,
--                 title = "Change Weather",
--                 icon = "weather",
--                 description = "Change the weather to Sunny.",
--                 onClick = function(index)
--                     SetWeatherTypeNow("CLEAR") -- Change weather to clear
--                     print("Weather changed to Sunny!")
--                 end
--             },
--             {
--                 index = 4,
--                 title = "Change Weather",
--                 icon = "weather",
--                 description = "Change the weather to Sunny.",
--                 onClick = function(index)
--                     SetWeatherTypeNow("CLEAR")
--                     print("Weather changed to Sunny!")
--                 end
--             }
--         },
--     })
--     print(id)
-- end

-- function point:onExit()
--     exports['LGF_Interaction']:closeInteraction()
-- end

-- -- Create a Interaction directly to entity bone
-- exports['LGF_Interaction']:createInteractionPed({
--     Entity = PlayerPedId(),
--     IndexBone = 31086,
--     DataBind = {
--         {
--             index = 1,
--             title = "Option 1",
--             icon = "icon1",
--             description = "Description for Option 1",
--             onClick = function(index)
--                 print("You selected Option 1!")
--             end
--         },
--         {
--             index = 2,
--             title = "Option 2",
--             icon = "icon2",
--             description = "Description for Option 2",
--             onClick = function(index)
--                 print("You selected Option 2!")
--             end
--         }
--     }
-- })

-- exports['LGF_Interaction']:createInteractionPed({
--     Entity = PlayerPedId(),
--     IndexBone = 31086,
--     DataBind = {
--         {
--             index = 1,
--             title = "Option 1",
--             icon = "icon1",
--             description = "Description for Option 1",
--             onClick = function(index)
--                 print("You selected Option 1!")
--             end
--         },
--         {
--             index = 2,
--             title = "Option 2",
--             icon = "icon2",
--             description = "Description for Option 2",
--             onClick = function(index)
--                 print("You selected Option 2!")
--             end
--         }
--     }
-- })

-- local interactionCreated = false

-- function manageVehicleInteraction()
--     local playerCoords = GetEntityCoords(cache.ped)
--     local vehicle, vehicleCoords = lib.getClosestVehicle(playerCoords, 2.0, false)

--     if vehicle then
--         if not interactionCreated then
--             exports['LGF_Interaction']:createInteractionVehicle({
--                 Entity = vehicle,
--                 IndexBone = GetEntityBoneIndexByName(vehicle, "boot"),
--                 DataBind = {
--                     {
--                         index = 1,
--                         title = "Apri Bagagliaio",
--                         icon = "trunk_icon",
--                         description = "Apri il bagagliaio del veicolo.",
--                         onClick = function(index)
--                             SetVehicleDoorOpen(vehicle, 5, false, false)
--                         end
--                     },
--                     {
--                         index = 2,
--                         title = "Chiudi Bagagliaio",
--                         icon = "trunk_icon",
--                         description = "Chiudi il bagagliaio del veicolo.",
--                         onClick = function(index)
--                             SetVehicleDoorShut(vehicle, 5, false)
--                         end
--                     }
--                 }
--             })
--             interactionCreated = true -- Interaction created
--             print("Interazione creata con il veicolo.")
--         end
--     else
--         if interactionCreated then
--             exports['LGF_Interaction']:closeInteraction() -- Close interaction if no vehicles are nearby
--             interactionCreated = false
--         end
--     end
-- end

-- Citizen.CreateThread(function()
--     while true do
--         Wait(1000)                 -- Check every half second
--         manageVehicleInteraction() -- Call the function to manage vehicle interaction
--     end
-- end)


